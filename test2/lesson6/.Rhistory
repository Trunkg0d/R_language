librabry(sfsmisc)
library(sfsmisc)
factor(c("yes","no","yes","maybe","maybe","no"))
character(c("h"),5)
matrix(data=1:15,nrow=5,ncol = 5, byrow = T)
rbind(1:5,5:!)
rbind(1:5,5:1)
a<-rbind(1:5,5:1)
dim(a)
nrow(a)
ncol(a)
T(a)
t(a)
b = matrix(2,2,3)
b
b = matrix(2,3,4)
b
b = matrix(1,3,4)
b
rbind(b,c("h","h","a","c"))
seq(3:30, length=10)
seq(3,30, length=10)
seq(2,30, length=10)
a
a^2
seq(1,15,by=3)
fruits <- c("banana", "apple", "orange")
fruits[1]
fruits[0]
fruits[2]
fruits[c[1,2]]
fruits[c(1,2)]
fruits[1]=c(1,2)
fruits[1]=c(1)
fruits
music_genre <- factor(c("Jazz", "Rock", "Classic", "Classic", "Pop", "Jazz", "Rock", "Jazz"))
music_genre
levels(music_genre)
levels
a = levels(music_genre)
a
music2 = factor(c("Jazz","Pop","Pop","Rock","Jazz"),levels=c("Classic","Rock","Jazz",
"Pop"))
music2
music2 = factor(c("Jazz","Pop","Pop","Rock","Jazz"),levels=c("Classic","Rock",
"Pop"))
music2
music_genre <- factor(c("Jazz", "Rock", "Classic", "Classic", "Pop", "Jazz", "Rock", "Jazz"))
music_genre
levels(music_genre)
levels(music_genre)
length(music_genre)
music_genre[3]
thismatrix
thismatrix <- matrix(c(1,2,3,4,5,6), nrow = 3, ncol = 2)
thismatrix
fruits_matrix <- matrix(c("apple", "banana", "cherry", "orange"), nrow = 2, ncol = 2)
fruits_matrix
thismatrix <- matrix(c("apple", "banana", "cherry", "orange"), nrow = 2, ncol = 2)
thismatrix[1, 2]
thismatrix <- matrix(c("apple", "banana", "cherry", "orange"), nrow = 2, ncol = 2)
thismatrix[2,]
thismatrix <- matrix(c("apple", "banana", "cherry", "orange"), nrow = 2, ncol = 2)
thismatrix[2,]
thismatrix <- matrix(c("apple", "banana", "cherry", "orange"), nrow = 2, ncol = 2)
thismatrix[,2]
thismatrix <- matrix(c("apple", "banana", "cherry", "orange","grape", "pineapple", "pear", "melon", "fig"), nrow = 3, ncol = 3)
thismatrix[c(1,2),]
thismatrix <- matrix(c("apple", "banana", "cherry", "orange","grape", "pineapple", "pear", "melon", "fig"), nrow = 3, ncol = 3)
thismatrix[, c(1,2)]
thismatrix <- matrix(c("apple", "banana", "cherry", "orange","grape", "pineapple", "pear", "melon", "fig"), nrow = 3, ncol = 3)
newmatrix <- cbind(thismatrix, c("strawberry", "blueberry", "raspberry"))
newmatrix
thismatrix <- matrix(c("apple", "banana", "cherry", "orange","grape", "pineapple", "pear", "melon", "fig"), nrow = 3, ncol = 3)
newmatrix <- rbind(thismatrix, c("strawberry", "blueberry", "raspberry"))
newmatrix
thismatrix <- matrix(c("apple", "banana", "cherry", "orange", "mango", "pineapple"), nrow = 3, ncol =2)
thismatrix
thismatrix <- thismatrix[-c(1), -c(1)]
thismatrix
thismatrix <- matrix(c("apple", "banana", "cherry", "orange"), nrow = 2, ncol = 2)
"apple" %in% thismatrix
thismatrix <- matrix(c("apple", "banana", "cherry", "orange"), nrow = 2, ncol = 2)
dim(thismatrix)
thismatrix <- matrix(c("apple", "banana", "cherry", "orange"), nrow = 2, ncol = 2)
length(thismatrix)
for (rows in 1:nrow(thismatrix)) {
for (columns in 1:ncol(thismatrix)) {
print(thismatrix[rows, columns])
}
}
thismatrix <- matrix(c("apple", "banana", "cherry", "orange"), nrow = 2, ncol = 2)
for (rows in 1:nrow(thismatrix)) {
for (columns in 1:ncol(thismatrix)) {
print(thismatrix[rows, columns])
}
}
Matrix1 <- matrix(c("apple", "banana", "cherry", "grape"), nrow = 2, ncol = 2)
Matrix2 <- matrix(c("orange", "mango", "pineapple", "watermelon"), nrow = 2, ncol = 2)
# Adding it as a rows
Matrix_Combined <- rbind(Matrix1, Matrix2)
Matrix_Combined
Matrix1 <- matrix(c("apple", "banana", "cherry", "grape"), nrow = 2, ncol = 2)
Matrix2 <- matrix(c("orange", "mango", "pineapple", "watermelon"), nrow = 2, ncol = 2)
Matrix1
Matrix2
Matrix_Combined <- rbind(Matrix1, Matrix2)
Matrix_Combined
# Adding it as a columns
Matrix_Combined <- cbind(Matrix1, Matrix2)
Matrix_Combined
q()
# defining vector
x <- c(7, 15, 23, 12, 44, 56, 32)
# plotting vector
barplot(x, xlab = "GeeksforGeeks Audience",
ylab = "Count", col = "white",
col.axis = "darkgreen",
col.lab = "darkgreen")
# defining vector x with number of articles
x <- c(210, 450, 250, 100, 50, 90)
# defining labels for each value in x
names(x) <- c("Algo", "DS", "Java", "C", "C++", "Python")
# output to be present as PNG file
png(file = "piechart.png")
# creating pie chart
pie(x, labels = names(x), col = "white",
main = "Articles on GeeksforGeeks", radius = -1,
col.main = "darkgreen")
# defining vector
x <- c(7, 15, 23, 12, 44, 56, 32)
# plotting vector
barplot(x, xlab = "GeeksforGeeks Audience",
ylab = "Count", col = "white",
col.axis = "darkgreen",
col.lab = "darkgreen")
# defining vector x with number of articles
x <- c(210, 450, 250, 100, 50, 90)
# defining labels for each value in x
names(x) <- c("Algo", "DS", "Java", "C", "C++", "Python")
# output to be present as PNG file
png(file = "piechart.png")
# creating pie chart
pie(x, labels = names(x), col = "white",
main = "Articles on GeeksforGeeks", radius = -1,
col.main = "darkgreen")
df <- read.csv(file.choose())
df
mean(state[["Population"]])
mean(df[["Population"]])
mean(df[["Population"]], trim=0.1)
weighted.mean(df[["Murder.Rate"]], w=state[["Population"]])
df <- read.csv(file.choose())
df
mean(df[["Population"]])
mean(df[["Population"]], trim=0.1)
weighted.mean(df[["Murder.Rate"]], w=df[["Population"]])
df
mean(df[["Population"]])
mean(df[["Population"]], trim=0.1)
weighted.mean(df[["Murder.Rate"]], w=df[["Population"]])
weighted.mean(df[["Murder.rate"]], w=df[["Population"]])
library("matrixStats")
library("matrixStats")
weightedMedian(df[["Murder.Rate"]], w=df[["Population"]])
install.packages("matrixStats")
library("matrixStats")
weightedMedian(df[["Murder.Rate"]], w=df[["Population"]])
library("matrixStats")
weightedMedian(df[["Murder.rate"]], w=df[["Population"]])
df
mean(df[["Population"]])
mean(df[["Population"]], trim=0.1)
weighted.mean(df[["Murder.rate"]], w=df[["Population"]])
install.packages("matrixStats")
install.packages("matrixStats")
df
mean(df[["Population"]])
mean(df[["Population"]], trim=0.1)
weighted.mean(df[["Murder.rate"]], w=df[["Population"]])
df
mean(df[["Population"]])
mean(df[["Population"]], trim=0.1)
weighted.mean(df[["Murder.rate"]], w=df[["Population"]])
install.packages("matrixStats")
weightedMedian(df[["Murder.rate"]], w=df[["Population"]])
library("matrixStats")
weightedMedian(df[["Murder.rate"]], w=df[["Population"]])
weightedMedian(df[["Murder.rate"]], w=df[["Population"]])
money = function(coint, m){
sum_money = 0
for( i in 1:m)
a = sample(coint, size = 1, prob=c(0.5, 0.5))
print(a)
if(a==1){
sum_money=sum_money+10
} else{
sum_money=sum_money-5
}
return (sum_money)
}
money(coint,100)
coint = c(0:1)
money = function(coint, m){
sum_money = 0
for( i in 1:m)
a = sample(coint, size = 1, prob=c(0.5, 0.5))
print(a)
if(a==1){
sum_money=sum_money+10
} else{
sum_money=sum_money-5
}
return (sum_money)
}
money(coint,100)
money = function(coint, m){
sum_money = 0
for( i in 1:m)
a = sample(coint, size = 1, prob=c(0.5, 0.5))
print(a)
if(a==1){
sum_money=sum_money+10
} else{
sum_money=sum_money-5
}
return (sum_money)
}
money(coint,100)
coint = c(0:1)
money = function(coint, m){
sum_money = 0
for( i in 1:m)
a = sample(coint, size = 1, prob=c(0.5, 0.5))
print(a)
if(a==1){
sum_money=sum_money+10
} else{
sum_money=sum_money-5
}
return (sum_money)
}
money(coint,100)
money(coint,100)
money(coint,100)
money(coint,100)
money(coint,100)
money(coint,100)
money(coint,100)
money(coint,100)
money(coint,100)
money(coint,100)
money(coint,100)
money(coint,100)
money(coint,100)
money(coint,100)
money(coint,100)
coint = c(0:1)
money = function(coint, m){
sum_money = 0
for( i in 1:m)
a = sample(coint, size = 1, prob=c(0.65, 0.35))
print(a)
if(a==1){
sum_money=sum_money+10
} else{
sum_money=sum_money-5
}
return (sum_money)
}
money(coint,100)
money(coint,100)
money(coint,100)
money(coint,100)
money(coint,10)
money(coint,10)
money(coint,7)
money(coint,7)
money(coint,7)
money(coint,7)
money(coint,7)
a = sample(coint, size = 1, prob=c(0.65, 0.35), replace = T)
coint = c(0:1)
money = function(coint, m){
sum_money = 0
for( i in 1:m)
a = sample(coint, size = 1, prob=c(0.65, 0.35), replace = T)
print(a)
if(a==1){
sum_money=sum_money+10
} else{
sum_money=sum_money-5
}
return (sum_money)
}
money(coint,7)
money(coint,7)
money(coint,7)
money(coint,7)
money(coint,7)
money(coint,7)
money(coint,7)
money(coint,7)
coint = c(0:1)
money = function(coint, m){
sum_money = 0
for( i in 1:m)
a = sample(coint, size = 1, prob=c(0.65, 0.35), replace = T)
print(a)
if(a==1){
sum_money=sum_money+10
} else{
sum_money=sum_money-5
}
return (sum_money)
}
money(coint,7)
money(coint,7)
coint = c(0:1)
money = function(coint, m){
sum_money = 0
for( i in 1:m){
a = sample(coint, size = 1, prob=c(0.65, 0.35), replace = T)
print(a)
if(a==1){
sum_money=sum_money+10
} else{
sum_money=sum_money-5
}
}
return (sum_money)
}
money(coint,7)
money(coint,7)
money(coint,7)
money(coint,7)
#Bai 5
diesel.engine = read.table('diesel_engine.dat',header=T)
#Bai 5
diesel.engine = read.table('diesel_engine.dat',header=T)
#Bai 5
diesel.engine = read.table('diesel_engine.dat',header=T)
#Bai 5
diesel.engine = read.table('diesel_engine.dat',header=T)
#Bai 5
diesel.engine = read.table('diesel_engine.dat',header=T)
setwd("D:/D Data/code/R/test2/lesson6")
